https://meet.google.com/kbu-jggk-aic

Nagraj
	mon -thu =>mon -even 3
	fri=>till 1pm
	sat n sun=>till 9
Akanksha
	=>10max


FullStack development
-------------------------------
FrontEnd +BackEnd

html=>Hyper Text Markup Language
css ==>Cascading Style Sheets
Bootstrap=>Responsive Web Design(RWD)
Javascript
Reactjs

Nodejs(expressjs)
MongoDB


Mern Stack==>MongoDb+expressjs+React+Node
Mean Stack =>MongoDb+expressjs+Angular+Node

==============================
HTML5
Hyper Text Markup Language

commonds in html is called =>html tags
html tags are 2 types
	1) Opening Tag
		ex: <title> 
	2) Closing Tag
		ex: </title>

html files saves as '.html'
html is 'not case sensitive'
Element:
=======
	<title> sfdssdfsd </title>

<br>  ==>break
<hr> ==>horizontal ruler

Heading tags:
===========
Headings are 6 types
	<h1> </h1>  =>big heading
	<h2> </h2>
	.
	.
	<h6> </h6> =>small heading

Paragraph tag:
===========
	<p> </p> ==>paragraph

Attributes:
=========
Attributes provide additional information about elements · Attributes are always specified in the start tag 

headings and paragraph attributes:
	align="left/center/right"

	<h1 align="center"> </h1>

31st July:
=======
list items
list items are 2 types
	1) order list item
		<ol> </ol>
	2)unorder list item
		<ul> </ul>


inserting images:
===============
	<img src="pic.jpg/gif/png">
	Attributes for img tag:
		width
		height
		border
		title
		alt
ex:
	<img src="pic.jpg" width="300px" border="2px" title="title here" alt="Some description">

Hyperlinks:
===========
	<a href="file.html"> link </a>
	a==>anchor
	href=>hyper reference


Forms:
======
	<form> </form>
	<input type="text/password/checkbox/radio/email/range/file/submit/reset">
	
	<select>
	<option> </option>
	</select>

	<textarea> </textarea>

1st August:
========
<table> </table>
<tr> </tr> ==>table row
<td> </td> ==>table data
<th> </th> ==>table head

Not finished....
iframe
divs
html5 tags

CSS3
=====
Cascading Style Sheets

CSS is used for describing the presentation of Web pages, including colors, layout, and fonts. It allows one to adapt the presentation to different types of devices, such as large screens, small screens, or printers.

Advantages:
CSS saves time − You can write CSS once and then reuse same sheet in multiple HTML pages. You can define a style for each HTML element and apply it to as many Web pages as you want.

Pages load faster − If you are using CSS, you do not need to write HTML tag attributes every time. Just write one CSS rule of a tag and apply it to all the occurrences of that tag. So less code means faster download times.

Easy maintenance − To make a global change, simply change the style, and all elements in all the web pages will be updated automatically.

Superior styles to HTML − CSS has a much wider array of attributes than HTML, so you can give a far better look to your HTML page in comparison to HTML attributes.

Multiple Device Compatibility − Style sheets allow content to be optimized for more than one type of device. By using the same HTML document, different versions of a website can be presented for handheld devices such as PDAs and cell phones or for printing.

Global web standards − Now HTML attributes are being deprecated and it is being recommended to use CSS. So its a good idea to start using CSS in all the HTML pages to make them compatible to future browsers.

Css can be applied to web pages in 3ways
	1) Internal css
	2) External css
	3) Inline css


	syntax:
		selector{ 
		    property:value;		
			}
	ex:
		h1{
		color:red;
		}


css properties:
==========
color:red;
font-family:arial;
font-size:1.4em;
text-align:left/center/right;
background-color:yellow;
width:300px;
height:300px;
border:1px solid/dotted/dashed red;

2nd Aug:

border-left/right/top/bottom:10px solid red;
list-style-type:none/circle/square;
list-style-img:url(pic.jpg);

background-image:url(pic.jpg);
backgorund-repeat:no-repeat/repeat-x/repeat-y;

margin:30px; ===>margin is a space outside of the element
padding:30px; ===>padding is a space inside the element

Selectors:
==========
	1)Tag / Element Selector
		ex: h1{ }
	2) class selector
		ex: .abc{}
	3) id selector
		ex: #abc{}
	4) pseudo selector
		ex: a:hover{}

text-decoration:none;
3rd Aug:
=======
class selector:
=========
class selector is used to select all elements which belong to a particular class attribute. 
In order to select the elements with a particular class, use the period (.) character specifying the class name ie., it will match the HTML element based on the contents of their class attribute.

	.className{ }

	<h1 class="className"> </h1>

divisions:

float:left/right;

border-radius:30px;
border-radius:30px 0px;
border-radius:30px 0px 90px 10px;
border-radius:50%;
box-shadow:10px 10px 10px black;
	
4th Aug:
=======
line-height:20px;
clear:left/right/both;

Responsive Web Design(RWD)
=======================
Media queries:
------------------------
Media query is a CSS technique introduced in CSS3.

It uses the @media rule to include a block of CSS properties only if a certain condition is true.


Media queries allow you to apply CSS styles depending on a device's general type (such as print vs. screen) or other characteristics such as screen resolution or browser viewport width. 
Media queries are used for the following: 
To conditionally apply styles with the CSS @media and @import at-rules.

CSS Media queries are a way to target browser by certain characteristics, features, and user preferences, then apply styles or run other code based on those things. 

Perhaps the most common media queries in the world are those that target particular viewport ranges and apply custom styles, which birthed the whole idea of responsive design.

@media screen and (max-width:999px){

}

Id selector:
=========
 id's are used for unique elements. it should not be repeated. i.e it should not be called number of times, where as class can be called number of times

	#idName{ }

	<h2 id="idName"> </h2>


5th Aug:
======
external css ==>Create a html and css file separatlhy 
	<head>
		<link href="file.css" rel="stylesheet">
	</head>
RWD

6th Aug:
=======
transition:property time
transform:scale(1) / rotate() /skew()
cursor:pointer;

display:none/inline/block/inline-block/flex;

INLINE AND BLOCK ELEMENTS:
===========================
BLOCK ELEMENT:
A block-level element always starts on a new line, and the browsers automatically add some space (a margin) before and after the element.

A block-level element always takes up the full width available (stretches out to the left and right as far as it can).
Two commonly used block elements are: <p> and <div>.
The <p> element defines a paragraph in an HTML document.
The <div> element defines a division or a section in an HTML document.

INLINE ELEMENTS:
An inline element does not start on a new line.
An inline element only takes up as much width as necessary.
This is a <span> element inside a paragraph.
<img>
<a>

inline-block:
display: inline-block allows to set a width and height on the element. Also, with display: inline-block , the top and bottom margins/paddings are respected, but with display: inline they are not.

FLEX BOX MODEL:
================
display:flex;
justify-content:flex-start / center /flex-end /space-around /space-between;   =>alinging horizontally
align-items:flex-start /center / flex-end;  ==>aligning vertically

8th Aug:

flex-direction: row/column;

box-sizing: border-box;
<span> </span>


positions:
=======
position:static/relative/absolute/fixed/sticky;
left:30px;
right:30px;
top:30px;
bottom:30px;

12th Aug:
=======
vh
vw
height: 100vh means 100% of the viewport height,
height: 100% means 100% of the parent's element height.

html 5 tags:
=========
<video> </video>
<audio> </audio>
<header> </header>
<footer> </footer>
<nav> </nav>
<aside> </aside>
<section> </section>
<article> </article>
<figure> </figure>
<figcaption> </figcaption>


Bootstrap:
=======
bootstrap is a framework of css
Bootstrap is the most popular HTML, CSS, and JavaScript framework for developing responsive, mobile-first websites.
Bootstrap is a widely-used open-source front-end framework for web development, providing a collection of HTML, CSS, and JavaScript components and tools that enable developers to build responsive, mobile-first websites with ease.

Bootstrap contains in buil templates
Bootstrap contains in built classes

	defining a class=> .abc{}
	calling a class => <h1 class="abc"> </h1>

	=> getbootstrap.com

why bootstrap:
It is Faster and Easier way for Web-Development.
It creates Platform-independent web-pages.
It creates Responsive Web-pages.
It designs responsive web pages for mobile devices too.
It is a free and open-source framework available on www.getbootstrap.com

<head>
	<link href="style.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">
</head>

typography / text classes:
===================
text-primary
text-danger
text-success
text-dark
text-light
text-warning
text-info

text alignment:
===========
text-start
text-center
text-end

background classes:
=================
bg-danger
bg-success
bg-warning
bg-info
bg-dark
bg-ligt
bg-primary
bg-secondary


Button classes:
===========
btn
btn-dark
btn-danger
btn-success
btn-primary
btn-warning
btn-info

btn-outline-primary

image classes:
==============
img-fluid
img-thumbnail

border classes:
=============
border
border-top
border-botto
border-start
border-end
border-1  --- 5  =>thickness

border-primary etc





